#include <16F877A.h>

#device ADC=10

#FUSES NOWDT                    //No Watch Dog Timer
#FUSES NOBROWNOUT               //No brownout reset
#FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O

#use delay(crystal=20000000)

#define LCD_RS_PIN         PIN_B4   // Cac ket noi C.LCD voi vi dieu khien.
#define LCD_RW_PIN         PIN_B3
#define LCD_ENABLE_PIN     PIN_B2
#define LCD_DATA4          PIN_D7
#define LCD_DATA5          PIN_D6
#define LCD_DATA6          PIN_D5
#define LCD_DATA7          PIN_D4
#include <lcd.h>

#define OK       input(PIN_C2)
#define Plus     input(PIN_C0)
#define Minus    input(PIN_C1)

#define BUZ PIN_C3

#define co_nhan      1            
#define khong_nhan   0           
#define c_ktnp       1  //co kiem tra nha phim          
#define k_ktnp       0  //khong kiem tra nha phim 

unsigned int16 so_ng, so_tp, lm35a_ng, lm35a_tp;
int1 ktra_Plus(int1 ktnp, unsigned int16 dl)   
{                    
   if (!input(Plus))   
   {        
      delay_ms(20);                                     
      if (!input(Plus))
      {
         if(ktnp) while(!input(Plus));
         delay_ms(dl);
         return co_nhan;      
      }                      
      return khong_nhan;   
   }         
  return khong_nhan;  
}

int1 ktra_Minus(int1 ktnp, unsigned int16 dl)   
{                    
   if (!input(Minus))   
   {        
      delay_ms(20);                                     
      if (!input(Minus))
      {
         if(ktnp) while(!input(Minus));
         delay_ms(dl);
         return co_nhan;      
      }                      
      return khong_nhan;   
   }         
  return khong_nhan;  
}

void float_to_ng_2so_tp(float st)                      
{
   so_ng = st/1;       //nguyen
   st = st-so_ng;      //tphan
   st = st*100;
   so_tp = st/1;
} 

float main_adc_read(unsigned int8 solan, chan)                      
{
   float kq_adc;  unsigned int8 i;
   set_adc_channel(chan);
   delay_us(20);
   kq_adc = 0;
   for(i=0;i<solan;i++)
   {
      kq_adc = kq_adc + read_adc();   
   }                                    
   kq_adc = kq_adc/solan;
   return kq_adc;
}

void doc_value_lm35( unsigned int8 slan) 
{
    float lm35a;
    lm35a=main_adc_read(slan,0);
    lm35a = lm35a/2.046;
    float_to_ng_2so_tp(lm35a);
    lm35a_ng = so_ng;
    lm35a_tp = so_tp;
}
